version: "3.7"

services:
  employee-db:
    image: mysql:8.0
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_DATABASE=employee
      - MYSQL_ROOT_PASSWORD=Sufyan@123
    ports:
      - "3306:3306" 
    volumes:
      - "./sql-scripts:/docker-entrypoint-initdb.d" 
    networks:
      - service-network
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      
  ticket-db:
    image: mysql:8.0
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_DATABASE=ticket
      - MYSQL_ROOT_PASSWORD=Sufyan@123
    ports:
      - "3307:3307" 
    volumes:
      - "./sql-scripts:/docker-entrypoint-initdb.d" 
    networks:
      - service-network
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      
  configserver:
    image: employee/configserver:0.0.1-SNAPSHOT
    ports:
      - "8071:8071"
    networks:
      - service-network
        
  eurekaserver:
    image: eureka/eurekaserver:0.0.1-SNAPSHOT
    ports:
      - "8070:8070"
    depends_on:
      configserver:
        condition: service_started  
    networks:
      - service-network
      
  employee-service:
    image: employee/employee:0.0.2-SNAPSHOT
    ports:
      - "8180:8180"
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT: "8071"
      DATABASESERVER_PORT: "3306"
    networks:
      - service-network
    depends_on: 
      employee-db:
        condition: service_healthy
      configserver:
        condition: service_started
        
  ticket-service:
    image: ticket/ticket:0.0.1-SNAPSHOT
    ports:
      - "8081:8081"
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT: "8071"
      DATABASESERVER_PORT: "3306"
    networks:
      - service-network
    depends_on: 
      ticket-db:
        condition: service_healthy
      configserver:
        condition: service_started

  gatewayserver:
    image: gateway/gatewayserver:0.0.1-SNAPSHOT
    ports:
      - "8072:8072"
    environment:
      PROFILE: "default"
      SERVER_PORT: "8072"
      CONFIGSERVER_URI: "http://configserver:8071"
      EUREKASERVER_URI: "http://eurekaserver:8070/eureka/"
      EUREKASERVER_PORT: "8070"
      CONFIGSERVER_PORT: "8071"
    depends_on:
      configserver:
        condition: service_started
      eurekaserver:
        condition: service_started
    networks:
      - service-network
  
  keycloak:
    image: jboss/keycloak
    restart: always
    environment:
      KEYCLOAK_VERSION: 9.0.1
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      DB_VENDOR: h2
    volumes:
        - ./realm-export.json:/opt/jboss/keycloak/realm-export.json
    command:
      - "-b 0.0.0.0"
      - "-Dkeycloak.import=/opt/jboss/keycloak/realm-export.json"
      - "-Dkeycloak.profile.feature.scripts=enabled"
      - "-Dkeycloak.profile.feature.upload_scripts=enabled"
    ports:
      - "8080:8080"
    networks:
      - service-network
      
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./esdata1:/var/lib/elasticsearch/data
    ports:
      - 9300:9300
      - 9200:9200
    networks:
      - service-network
      
  kibana:
    image: docker.elastic.co/kibana/kibana:7.7.0
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: "http://elasticsearch:9200"
    ports:
      - 5601:5601
    networks:
      - service-network
      
  logstash:
    image: docker.elastic.co/logstash/logstash:7.7.0
    container_name: logstash
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    volumes:
      - ./config:/etc/logstash/conf.d
    ports:
      - "5000:5000"
    networks:
      - service-network
      
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    depends_on:
      - elasticsearch
    environment:
      - STORAGE_TYPE=elasticsearch
      - "ES_HOSTS=elasticsearch:9200"
    ports:
      - "9411:9411"
    networks:
      - service-network
      
networks:
  service-network:
    
volumes:
  db:
    driver: local
